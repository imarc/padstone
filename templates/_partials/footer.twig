{% import "/_macros" as macros %}

<footer class="siteFooter">
    <div class="siteFooter__container container">

        <a href="/" class="siteFooter__brand">
            <svg xmlns="http://www.w3.org/2000/svg" class="siteFooter__logo" width="36" height="44" viewBox="3 1 18 22" stroke-width="1" stroke="currentColor" fill="none">
                <path d="M6 17.6l-2 -1.1v-2.5" />
                <path d="M4 10v-2.5l2 -1.1" />
                <path d="M10 4.1l2 -1.1l2 1.1" />
                <path d="M18 6.4l2 1.1v2.5" />
                <path d="M20 14v2.5l-2 1.12" />
                <path d="M14 19.9l-2 1.1l-2 -1.1" />
                <line x1="12" y1="12" x2="14" y2="10.9" />
                <line x1="18" y1="8.6" x2="20" y2="7.5" />
                <line x1="12" y1="12" x2="12" y2="14.5" />
                <line x1="12" y1="18.5" x2="12" y2="21" />
                <path d="M12 12l-2 -1.12" />
                <line x1="6" y1="8.6" x2="4" y2="7.5" />
            </svg>
            <div class="siteFooter__siteName">{{ siteName }}</div>
        </a>

        <nav class="siteFooter__links linkGroups">
            {% for navItem in footerNavigation.navigationLinks.all %}
                {% set navLink = navItem.navLink and navItem.navLink.one ? navItem.navLink.one : null %}
                {{ navLink.title }}
                <div class="linkGroup">
                    {% if navLink.ctaLink and navLink.ctaLink.value %}
                        {{ macros.renderLink(navLink, { class: 'linkGroup__heading' }) }}
                    {% else %}
                        <div class="linkGroup__heading">{{ navLink.title}}</div>
                    {% endif %}

                    {% if navItem.children.count %}
                        <ul class="linkGroup__list {{ navItem.navigationColumnSpan }}">
                             {% for subNavItem in navItem.navigationLinks.all %}
                                {% set subNavLink = subNavItem.navLink and subNavItem.navLink.one ? subNavItem.navLink.one : null %}
                                <li class="linkGroup__item">
                                    {% if subNavItem.children.count %}
                                        {% if subNavLink.ctaLink and subNavLink.ctaLink.value %}
                                            {{ macros.renderLink(subNavLink, { class: 'linkGroup__heading -secondary' }) }}
                                        {% elseif subNavItem.navigationLinks and subNavItem.navigationlinks.count() %}
                                            <div class="linkGroups__heading">{{ subNavItem.title }}</div>
                                        {% else  %}
                                            {{ subNavItem.title }}
                                        {% endif %}
                                        {% if subNavItem.navigationLinks and subNavItem.navigationLinks.count() %}
                                            <ul class="linkGroup__list -secondary {{ subNavItem.columnSpan }}">
                                                {% for subSubNavItem in subNavItem.navigationLinks.all() %}
                                                    {% set subSubNavLink = subSubNavItem.navLink and subSubNavItem.navLink.one ? subSubNavItem.navLink.one : null %}
                                                    {% if subSubNavLink.ctaLink and subSubNavLink.ctaLink.value %}
                                                        <li class="linkGroups__item">
                                                            <a href="{{ subSubNavLink.ctaLink.value }}" class="linkGroups__link" {{ subSubNavLink.generalToggleOff ? 'target="_new"' }}>{{ subSubNavLink.title }}</a>
                                                        </li>
                                                    {% endif %}
                                                {% endfor %}
                                            </ul>
                                        {% endif %}
                                    {% else %}
                                        {% if subNavItem.type == 'navigationLink' %}
                                            {{ subNavItem.navigationLink.getLink({ class: 'linkGroup__link' }) }}
                                        {% elseif subNavItem.type == 'navigationGroup' %}
                                            {{ subNavItem.navigationHeading }}
                                        {% endif %}
                                    {% endif %}
                                </li>
                            {% endfor %}
                        </ul>
                    {% endif %}
                </div>
            {% endfor %}
        </nav>

        <nav class="siteFooter__socialLinks">
            <a class="siteFooter__socialLink" href="">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-facebook" width="32" height="32" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3" />
                </svg>
            </a>

            <a class="siteFooter__socialLink" href="">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-instagram" width="32" height="32" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <rect x="4" y="4" width="16" height="16" rx="4" />
                  <circle cx="12" cy="12" r="3" />
                  <line x1="16.5" y1="7.5" x2="16.5" y2="7.501" />
                </svg>
            </a>

            <a class="siteFooter__socialLink" href="">
                <svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-brand-twitter" width="32" height="32" viewBox="0 0 24 24" stroke-width="1" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c-.002 -.249 1.51 -2.772 1.818 -4.013z" />
                </svg>
            </a>
        </nav>
    </div>

    <div class="siteFooter__utility container">
        <div class="siteFooter__copyright">Â© {{ "now"|date('Y') }} Padstone. Padstone is an open source project built by <a href="https://www.imarc.com/">Imarc.</a></div>

        <nav class="utilityNav">
            <ul class="utilityNav__list">
                <li class="utilityNav__item">
                    <a class="utilityNav__link" href="#">privacy policy</a>
                </li>
                <li class="utilityNav__item">
                    <a class="utilityNav__link" href="#">legal</a>
                </li>
            </ul>
        </nav>

    </div>
</footer>
